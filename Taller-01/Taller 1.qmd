---
title: "Taller 1: Conociendo Git y Github"
autor: "Lic. Diego Saavedra Mg. Sc."
format:
  revealjs: 
    theme: dark
  pdf: 
    cite-method: biblatex
bibliography: Prueba.bib
cls: apa.cls
---

## ¿Qué es Git?
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>
<p style='text-align: center;'>
![](img/git.png)
</p>

<p style='text-align: justify;'> Git es un software de control de versiones diseñado por **Linus Torvalds**, pensando en la eficiencia, la confiabilidad y compatibilidad del mantenimiento de versiones de aplicaciones cuando estas tienen un gran número de archivos de código fuente.</p>
<br>
<br>
<div data-id="box" style="height: 50px; background: #681511;"></div>

## ¿Qué es Git?
<div data-id="box" style="height: 50px; background: #681511;"></div>
<br>
<p style='text-align: center;'>
![](img/git.png)
</p>

<p style='text-align: justify;'>Su propósito es llevar registro de los cambios en archivos de computadora incluyendo coordinar el trabajo que varias personas realizan sobre archivos compartidos en un repositorio de código. </p> 
<br>
<br>
<br>
<div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos principales.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

<p style='text-align: justify;'> A continuación se mencionarán los comándos básicos de esta herramienta de versionado denominada **git**.
</p>
<br>
<p style='text-align: center;'>
![](img/git.png)
</p>
<br>
<br>
<br>

<div data-id="box" style="height: 50px; background: #681511;"></div>

## Comandos Git
 <div data-id="box" style="height: 50px; background: #681511;"></div>
<br>

### Git init
    git init
<p style='text-align: justify;'> Permite crear la carpeta oculta .init y todo el sistema de versionado que lo acompaña.</p>

### Git Status

    git status

<p style='text-align: justify;'> Es el comando que más utilizado en este sistema de versionado, permite conocer el estado actual del proyecto.</p>
<br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

---
## Comandos Git
 <div data-id="box" style="height: 50px; background: #681511;"></div>
<br>

### Git add

    git add archivo.extensión

<p style='text-align: justify;'> El comando **add** permite agregar el o los archivos modificados al estado **staging**.</p>

### Git rm

    git rm archivo.extensión
<p style='text-align: justify;'> El comando **rm** permite eliminar el archivo del repositorio de git.</p>
<br>
<div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos Git
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

### Git commit

    git commit -m "mensaje"

<p style='text-align: justify;'> Este comando permite pasar del estado de **staging** al repositorio (ya conoceremos los repositorios).
<br>
<br>
<br>
<br>
<br>
<br>
<div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos principales.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
<br>

### Git diff

    git diff hash1 hash2

  <p style='text-align: justify;'> Este comando permite comparar una versión del repositorio con otro.</p>

### Git log

    git log archivo.extensión
    git log --stat

<p style='text-align: justify;'>Permite conocer información mucho más enriquesida que **git status**.</p>
<br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos principales.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
<br>

###  Git reset

    git reset hash

<p style='text-align: justify;'>Permite regresar (como en una máquina del tiempo) al estado anterior del avance del proyecto.</p>
<br>
<p style='text-align: justify;'>Se recomienda utilizar si es necesario recuperar información que es necesaria en un punto donde no hay un error o no se ha dañado el proyecto.</p>
<br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos principales.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
<br>

###  Git reset
    git reset hard 

<p style='text-align: justify;'>Consultar este comando.</p>

    git reset hard --soft

<p style='text-align: justify;'>Consultar este comando.</p>
<br>
<br>
<br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

---

## Comandos principales.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>


### Git checkout

    git checkout hash

<p style='text-align: justify;'>Según @molinariosEvaluacionFrameworksDesarrollo2016 este comando permite cambiar de un estado a otro (Sigue funcionando la máquina del tiempo), para conocer que se ha avanzado en el proyecto de acuerdo a cada **commit**.</p>

    git checkout main arhcivo.extensión

<p style='text-align: justify;'>Este comando permite regresar al último commit realizado en el respositorio del proyecto.</p>
<br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

# Estados de Git
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

---

## Estados de Git.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

### Git Staging
<p style='text-align: center;'>
![](img/git.png)
</p>

### Git Staging
<p style='text-align: center;'>
![](img/git.png)
</p>
 <div data-id="box" style="height: 50px; background: #681511;"></div>
---

## Estados de Git.
 <div data-id="box" style="height: 50px; background: #681511;"></div>

### Git Staging
<p style='text-align: center;'>
![](img/git.png)
</p>

### Git Staging

<p style='text-align: center;'>
![](img/git.png)
</p>
 <div data-id="box" style="height: 50px; background: #681511;"></div>

# Práctica.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

---

### Práctica.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

Sigue las siguientes indicaciones:

    1. Crear un Directorio con el nombre Curriculo Vitae.

    2. Utilizar el comando git init.

    git init
    
    3. Crear un archivo con el nombre **index.md**
    
    touch index.md
    
    4. Abrir el archivo con VScode.
 <br>
 <div data-id="box" style="height: 50px; background: #681511;"></div>
---

### Práctica.
 <div data-id="box" style="height: 50px; background: #681511;"></div>
 <br>

    5. Escribir los datos principales de tu hoja de vida (Nombres y Apellidos,
    Correo, Teléfono, etc).

    6. Agregar una foto de Perfil.
    
    8. Agregar tu experiencia laboral (Si tiene certificados laborales por favor 
    agregalos).

    9. Agregar tus habilidades (Utiliza una lista no ordenada).
    
    10. Agrega referencias personales.
 <br>
 <br>

 <div data-id="box" style="height: 50px; background: #681511;"></div>

## Referencias

::: {#refs}
:::